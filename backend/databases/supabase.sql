create table public.notification (
  notification_id bigint generated by default as identity not null,
  message character varying null,
  status boolean null,
  type character varying null,
  created_at timestamp with time zone not null default now(),
  constraint notification_pkey primary key (notification_id)
) TABLESPACE pg_default;

create table public.customer_profiles (
  id uuid not null,
  customer_name text not null,
  phone_number character varying(20) not null,
  street_address text not null,
  postal_code integer not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint customer_profiles_pkey primary key (id),
  constraint customer_profiles_id_fkey foreign KEY (id) references auth.users (id)
) TABLESPACE pg_default;

create table public.driver_profiles (
  id uuid not null,
  driver_name text not null,
  phone_number character varying(20) not null,
  street_address text not null,
  postal_code integer not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint driver_profiles_pkey primary key (id),
  constraint driver_profiles_id_fkey foreign KEY (id) references auth.users (id)
) TABLESPACE pg_default;

create table public.menu (
  menu_id serial not null,
  restaurant_id integer not null,
  item_name character varying(255) not null,
  description text null,
  price numeric(10, 2) not null,
  constraint menu_pkey primary key (menu_id),
  constraint menu_restaurant_id_fkey foreign KEY (restaurant_id) references restaurant (restaurant_id)
) TABLESPACE pg_default;

create table public.orders (
  order_id serial not null,
  user_id uuid not null,
  restaurant_id integer not null,
  item_name character varying(255) not null,
  quantity integer not null,
  order_price numeric(10, 2) not null,
  payment_id character varying(255) null,
  created_at timestamp without time zone null default now(),
  order_type text null,
  constraint orders_pkey primary key (order_id),
  constraint orders_restaurant_id_fkey foreign KEY (restaurant_id) references restaurant (restaurant_id),
  constraint orders_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create table public.reservation (
  reservation_id serial not null,
  restaurant_id integer not null,
  user_id uuid null,
  table_no integer null default 1,
  status character varying(255) not null,
  count integer null default 10,
  price numeric(10, 2) null,
  time timestamp without time zone null,
  order_id smallint null,
  payment_id character varying(255) null,
  constraint reservation_pkey primary key (reservation_id),
  constraint reservation_restaurant_id_fkey foreign KEY (restaurant_id) references restaurant (restaurant_id),
  constraint reservation_user_id_fkey foreign KEY (user_id) references auth.users (id)
) TABLESPACE pg_default;

create table public.restaurant (
  restaurant_id serial not null,
  capacity integer not null,
  availability boolean not null,
  name character varying(255) not null,
  address text not null,
  rating character varying(50) not null,
  cuisine character varying(255) not null,
  constraint restaurant_pkey primary key (restaurant_id)
) TABLESPACE pg_default;

create table public.user_types (
  user_id uuid not null,
  user_type text not null,
  constraint user_types_pkey primary key (user_id),
  constraint user_types_user_id_fkey foreign KEY (user_id) references auth.users (id),
  constraint user_types_user_type_check check (
    (
      user_type = any (array['customer'::text, 'driver'::text])
    )
  )
) TABLESPACE pg_default;

create table public.payments (
  payment_id serial not null,
  stripe_payment_id character varying(255) not null,
  amount numeric(10, 2) not null,
  status character varying(50) not null,
  created_at timestamp with time zone null default now(),
  constraint payments_pkey primary key (payment_id)
) TABLESPACE pg_default;