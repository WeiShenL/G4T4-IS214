version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - feastfinder-network
  
  rabbitmq-setup:
    build: ./rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    restart: on-failure
    networks:
      - feastfinder-network

  menu-service:
    build: ./services/simple/menu
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5003:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  reservation-service:
    build: ./services/simple/reservation
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5002:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  order-service:
    build: ./services/simple/order
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5004:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  restaurant-service:
    build: ./services/simple/restaurant
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5001:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  user-service:
    build: ./services/simple/user
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5000:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  notification-service:
    build: ./services/simple/notification
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5005:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  payment-service:
    build: ./services/simple/payment
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5006:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  create-booking-service:
    build: ./services/complex/create_booking
    depends_on:
      rabbitmq:
        condition: service_healthy
      menu-service:
        condition: service_started
      reservation-service:
        condition: service_started
      order-service:
        condition: service_started
      restaurant-service:
        condition: service_started
      user-service:
        condition: service_started
      notification-service:
        condition: service_started
      payment-service:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=5000
      - USER_SERVICE_URL=http://user-service:5000
      - RESTAURANT_SERVICE_URL=http://restaurant-service:5000
      - ORDER_SERVICE_URL=http://order-service:5000
      - RESERVATION_SERVICE_URL=http://reservation-service:5000
      - MENU_SERVICE_URL=http://menu-service:5000
      - NOTIFICATION_SERVICE_URL=http://notification-service:5000
      - PAYMENT_SERVICE_URL=http://payment-service:5000
    env_file:
      - .env
    ports:
      - "5007:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  # User Scenario 2 Services are hereeee (composites)
  
  accept-booking-service:
    build: ./services/complex/accept_booking
    depends_on:
      rabbitmq:
        condition: service_healthy
      reservation-service:
        condition: service_started
      order-service:
        condition: service_started
      restaurant-service:
        condition: service_started
      user-service:
        condition: service_started
      notification-service:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=5000
      - USER_SERVICE_URL=http://user-service:5000
      - RESTAURANT_SERVICE_URL=http://restaurant-service:5000
      - ORDER_SERVICE_URL=http://order-service:5000
      - RESERVATION_SERVICE_URL=http://reservation-service:5000
    env_file:
      - .env
    ports:
      - "5010:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  cancel-booking-service:
    build: ./services/complex/cancel_booking
    depends_on:
      rabbitmq:
        condition: service_healthy
      reservation-service:
        condition: service_started
      order-service:
        condition: service_started
      payment-service:
        condition: service_started
      notification-service:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=5000
      - USER_SERVICE_URL=http://user-service:5000
      - RESERVATION_SERVICE_URL=http://reservation-service:5000
      - ORDER_SERVICE_URL=http://order-service:5000
      - PAYMENT_SERVICE_URL=http://payment-service:5000
      - NOTIFICATION_SERVICE_URL=http://notification-service:5000
      - REALLOCATE_RESERVATION_SERVICE_URL=http://reallocate-reservation-service:5000
    env_file:
      - .env
    ports:
      - "5008:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  reallocate-reservation-service:
    build: ./services/complex/reallocate_reservation
    depends_on:
      rabbitmq:
        condition: service_healthy
      reservation-service:
        condition: service_started
      user-service:
        condition: service_started
      notification-service:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=5000
      - USER_SERVICE_URL=http://user-service:5000
      - RESERVATION_SERVICE_URL=http://reservation-service:5000
      - NOTIFICATION_SERVICE_URL=http://notification-service:5000
    env_file:
      - .env
    ports:
      - "5009:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  # User Scenario 3 Services
  driver-service:
    build: ./services/simple/driver
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5011:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  driver-details-service:
    build: ./services/simple/driver_details
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5012:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  geo-service:
    build: ./services/simple/geo
    environment:
      - PORT=5000
    env_file:
      - .env
    ports:
      - "5013:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  driver-status-service:
    build: ./services/complex/driver_status
    depends_on:
      rabbitmq:
        condition: service_healthy
      driver-service:
        condition: service_started
      driver-details-service:
        condition: service_started
      user-service:
        condition: service_started
      order-service:
        condition: service_started
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=5000
      - DRIVER_SERVICE_URL=http://driver-service:5000
      - DRIVER_DETAILS_SERVICE_URL=http://driver-details-service:5000
      - USER_SERVICE_URL=http://user-service:5000
      - ORDER_SERVICE_URL=http://order-service:5000
    env_file:
      - .env
    ports:
      - "5015:5000"
    restart: on-failure
    networks:
      - feastfinder-network

  dms-service:
    build: ./services/complex/dms
    depends_on:
      driver-service:
        condition: service_started
      driver-details-service:
        condition: service_started
      user-service:
        condition: service_started
      order-service:
        condition: service_started
      restaurant-service:
        condition: service_started
      geo-service:
        condition: service_started
    environment:
      - PORT=5000
      - DRIVER_SERVICE_URL=http://driver-service:5000
      - DRIVER_DETAILS_SERVICE_URL=http://driver-details-service:5000
      - USER_SERVICE_URL=http://user-service:5000
      - ORDER_SERVICE_URL=http://order-service:5000
      - RESTAURANT_SERVICE_URL=http://restaurant-service:5000
      - GEOCODING_SERVICE_URL=http://geo-service:5000
    env_file:
      - .env
    ports:
      - "5014:5000"
    restart: on-failure
    networks:
      - feastfinder-network

networks:
  feastfinder-network:
    driver: bridge 